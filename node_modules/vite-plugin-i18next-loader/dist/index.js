import u from"node:path";import{setProperty as U}from"dot-prop";import{marked as A}from"marked";import z from"marked-terminal";import{merge as D}from"ts-deepmerge";import{createLogger as J}from"vite";import*as a from"node:fs";import*as c from"node:path";import{globSync as C}from"glob";import*as b from"js-yaml";var L="virtual:i18next-loader",g="\0"+L;function v(e){return e.replace(/-/g,"_")}function I(e){return a.readdirSync(e).filter(function(t){return a.statSync(c.join(e,t)).isDirectory()})}function P(e,t,r){if(typeof e=="string"&&e.includes("!"))throw new Error("Exclusions are not supported in pattern. Use the `ignore` option instead.");if(Array.isArray(e)){for(let n of e)if(n.includes("!"))throw new Error("Exclusions are not supported in pattern. Use the `ignore` option instead.")}return C(e,{cwd:t,absolute:!0,realpath:!0,ignore:r})}function R(e,t){return e.map(r=>c.isAbsolute(r)?r:c.join(t,r))}function E(e){for(let t of e)if(!a.existsSync(t))throw new Error(`Directory does not exist: ${t}`)}function $(e){let t=String(a.readFileSync(e)),r=c.extname(e),f;return r===".yaml"||r===".yml"?f=b.load(t):f=JSON.parse(t),f}A.setOptions({renderer:new z});var B={silent:0,error:1,warn:2,info:3},w=[],x=new Set,V=e=>{let t=J(e.logLevel||"warn",{prefix:"[i18next-loader]"});function r(){let n=R(e.paths,process.cwd());E(n);let s={};w=[],t.info("Bundling locales (ordered least specific to most):",{timestamp:!0}),n.forEach(o=>{let j=I(o);x=new Set([...x,...j]);for(let p of j){let h={};h[p]={};let F=u.join(o,p),k=P(e.include||["**/*.json","**/*.yml","**/*.yaml"],F,e.ignore);for(let l of k){w.push(l),t.info("	"+l,{timestamp:!0});let S=$(l);if(e.namespaceResolution){let y=l;e.namespaceResolution==="relativePath"?y=u.relative(u.join(o,p),l):e.namespaceResolution==="basename"&&(y=u.basename(l));let M=u.extname(l),O=y.replace(M,"").split(u.sep),N=[p].concat(O).join(".");U(h,N,S)}else h[p]=S;s=D(s,h)}}});let d="";for(let o of x)d+=`export const ${v(o)} = ${JSON.stringify(s[o])}
`;let i=`const resources = { 
`;for(let o of x)i+=`"${o}": ${v(o)},
`;i+="}",i+=`
export default resources
`;let m=d+i;return t.info(`Locales module '${g}':`,{timestamp:!0}),B[e.logLevel||"warn"]>=B.info&&console.log(A(`
\`\`\`js
${m}
\`\`\`
`)),m}return{name:"vite-plugin-i18next-loader",resolveId(n){return n===L?g:null},load(n){if(n!==g)return null;let s=r();for(let d of w)this.addWatchFile(d);return s},async handleHotUpdate({file:n,server:s}){if(n.match(/\.(json|yml|yaml)$/)&&e.paths.some(i=>n.startsWith(u.join(process.cwd(),i)))){t.info(`Changed locale file: ${n}`,{timestamp:!0});let{moduleGraph:i}=s,m=i.getModuleById(g);m&&await s.reloadModule(m)}}}},te=V;export{B as LogLevels,te as default};
//# sourceMappingURL=index.js.map